{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/authorized-user/authorized-user.component.css","webpack:///./src/app/authorized-user/authorized-user.component.html","webpack:///./src/app/authorized-user/authorized-user.component.ts","webpack:///./src/app/authorized-user/game/dealer-output/dealer-output.component.css","webpack:///./src/app/authorized-user/game/dealer-output/dealer-output.component.html","webpack:///./src/app/authorized-user/game/dealer-output/dealer-output.component.ts","webpack:///./src/app/authorized-user/game/game.component.css","webpack:///./src/app/authorized-user/game/game.component.html","webpack:///./src/app/authorized-user/game/game.component.ts","webpack:///./src/app/authorized-user/game/player-output/player-output.component.css","webpack:///./src/app/authorized-user/game/player-output/player-output.component.html","webpack:///./src/app/authorized-user/game/player-output/player-output.component.ts","webpack:///./src/app/authorized-user/startpage/startpage.component.css","webpack:///./src/app/authorized-user/startpage/startpage.component.html","webpack:///./src/app/authorized-user/startpage/startpage.component.ts","webpack:///./src/app/error-page/error-page.component.css","webpack:///./src/app/error-page/error-page.component.html","webpack:///./src/app/error-page/error-page.component.ts","webpack:///./src/app/homepage/homepage.component.css","webpack:///./src/app/homepage/homepage.component.html","webpack:///./src/app/homepage/homepage.component.ts","webpack:///./src/app/shared/models/authorized-user-view.ts","webpack:///./src/app/shared/models/game-view.ts","webpack:///./src/app/shared/models/player-view.ts","webpack:///./src/app/shared/services/data.service.ts","webpack:///./src/app/shared/services/error.service.ts","webpack:///./src/app/shared/services/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    \r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\nimport { StartpageComponent } from './authorized-user/startpage/startpage.component';\r\nimport { AuthorizedUserComponent } from './authorized-user/authorized-user.component';\r\nimport { GameComponent } from './authorized-user/game/game.component';\r\nimport { PlayerOutputComponent } from './authorized-user/game/player-output/player-output.component';\r\nimport { DealerOutputComponent } from './authorized-user/game/dealer-output/dealer-output.component';\r\nimport { ErrorPageComponent } from './error-page/error-page.component';\r\n\r\nimport { DataService } from './shared/services/data.service';\r\nimport { ErrorService } from './shared/services/error.service';\r\nimport { HttpService } from './shared/services/http.service';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', component: HomepageComponent },\r\n    {\r\n        path: 'user/:UserName',\r\n        component: AuthorizedUserComponent,\r\n        children: [\r\n            { path: '', component: StartpageComponent },\r\n            { path: 'game/:Id', component: GameComponent }\r\n        ]\r\n    },\r\n    { path: 'error', component: ErrorPageComponent }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n      AppComponent,\r\n      HomepageComponent,\r\n      StartpageComponent,\r\n      AuthorizedUserComponent,\r\n      GameComponent,\r\n      PlayerOutputComponent,\r\n      DealerOutputComponent,\r\n      ErrorPageComponent\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      FormsModule,\r\n      HttpClientModule,\r\n      RouterModule.forRoot(\r\n          appRoutes,\r\n          { useHash: true }\r\n      )\r\n  ],\r\n    providers: [\r\n        DataService,\r\n        ErrorService,\r\n        HttpService,\r\n        { provide: APP_BASE_HREF, useValue: '/' }\r\n    ],\r\n    bootstrap: [\r\n        AppComponent,\r\n        HomepageComponent,\r\n        StartpageComponent,\r\n        AuthorizedUserComponent,\r\n        GameComponent,\r\n        PlayerOutputComponent,\r\n        DealerOutputComponent,\r\n        ErrorPageComponent\r\n    ]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myNavbar\\\">\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n            </button>\\r\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/user', UserName]\\\">\\r\\n                Home\\r\\n            </a>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"myNavbar\\\">\\r\\n            <ul class=\\\"nav navbar-nav\\\">\\r\\n                <li class=\\\"navbar-text\\\">\\r\\n                    <b>Log in as: {{UserName}}</b>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a routerLink=\\\"/\\\">\\r\\n                        Log out\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</nav>\\r\\n<router-outlet></router-outlet>  \"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { DataService } from '../shared/services/data.service';\r\n\r\n@Component({\r\n    selector: 'app-authorized-user',\r\n    templateUrl: './authorized-user.component.html',\r\n    styleUrls: ['./authorized-user.component.css']\r\n})\r\nexport class AuthorizedUserComponent implements OnInit {\r\n    UserName: string;\r\n\r\n    constructor(\r\n        private _dataService: DataService,\r\n        private _route: ActivatedRoute\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this._route.params.subscribe(params => {\r\n            this.UserName = params['UserName']\r\n        });\r\n\r\n        this._dataService.SetUserName(this.UserName);\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>Score: {{Score}}</p>\\r\\n\\r\\n<div *ngIf=\\\"RoundFirstPhase\\\">\\r\\n    <p>Card:</p>\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let card of Cards\\\">{{card}}</li>\\r\\n    </ul>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"RoundSecondPhase\\\">\\r\\n    <p>CardScore: {{RoundScore}}</p>\\r\\n    <p>Cards:</p>\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let card of Cards\\\">{{card}}</li>\\r\\n    </ul>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-dealer-output',\r\n    templateUrl: './dealer-output.component.html',\r\n    styleUrls: ['./dealer-output.component.css']\r\n})\r\nexport class DealerOutputComponent {\r\n    @Input() Score: number;\r\n    @Input() RoundScore: number;\r\n    @Input() Cards: string[];\r\n    \r\n    RoundFirstPhase: boolean = false;\r\n    RoundSecondPhase: boolean = false;\r\n\r\n    constructor() { }\r\n\r\n    @Input()\r\n    set GameStage(stage: number) {\r\n        if (stage == 1) {\r\n            this.RoundFirstPhase = true;\r\n            this.RoundSecondPhase = false;\r\n        }\r\n\r\n        if (stage == 2) {\r\n            this.RoundFirstPhase = false;\r\n            this.RoundSecondPhase = true;\r\n        }\r\n\r\n        if (stage == 0) {\r\n            this.RoundFirstPhase = false;\r\n            this.RoundSecondPhase = false;\r\n        }\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row row-flex\\\">\\r\\n    <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-xs-12 well\\\">\\r\\n        <h4><span class=\\\"label label-danger\\\">Dealer</span></h4>\\r\\n        <p>Name: {{Game.Dealer.Name}}</p>\\r\\n        <app-dealer-output [Score]=\\\"Game.Dealer.Score\\\" [RoundScore]=\\\"Game.Dealer.RoundScore\\\" [Cards]=\\\"Game.Dealer.Cards\\\" [GameStage]=\\\"Game.Stage\\\"></app-dealer-output>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-8 col-md-8 col-sm-8 col-xs-12 well\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-12\\\">\\r\\n                <h4><span class=\\\"label label-primary\\\">Human</span></h4>\\r\\n                <p>Name: {{Game.Human.Name}}</p>\\r\\n                <app-player-output [Score]=\\\"Game.Human.Score\\\" [Bet]=\\\"Game.Human.Bet\\\" [RoundScore]=\\\"Game.Human.RoundScore\\\" [Cards]=\\\"Game.Human.Cards\\\" [GameStage]=\\\"Game.Stage\\\"></app-player-output>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-12\\\">\\r\\n                <div *ngIf=\\\"BetInput\\\">\\r\\n                    <label class=\\\"control-label\\\">Enter your bet: </label>\\r\\n                    <input [(ngModel)]=\\\"Bet\\\" type=\\\"number\\\"\\r\\n                           class=\\\"form-control\\\" step=\\\"50\\\" min=\\\"50\\\" value=\\\"50\\\" max={{Game.Human.Score}} />\\r\\n                    <br />\\r\\n                    <div *ngIf=\\\"BetValidationError\\\">\\r\\n                        <div class=\\\"alert alert-danger\\\">{{BetValidationMessage}}</div>\\r\\n                    </div>\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"DoRoundFirstPhase()\\\">Enter</button>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"TakeCard\\\">\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"AddCardToHuman(true)\\\">Take card</button>\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"AddCardToHuman(false)\\\">Don't take</button>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"BlackJackDangerChoice\\\">\\r\\n                    <p>You have BlackJack and dealer has BlackJack-danger</p>\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"DoRoundSecondPhase(true)\\\">Continue round</button>\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"DoRoundSecondPhase(false)\\\">Take award (1:1)</button>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"EndRound\\\">\\r\\n                    <p>{{RoundResult}}</p>\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"StartNewRound()\\\">End round</button>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"EndGame\\\">\\r\\n                    <p>{{GameResult}}</p>\\r\\n                    <button class=\\\"btn btn-primary\\\" (click)=\\\"StartNewGame()\\\">End game</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row row-flex\\\">\\r\\n    <div *ngFor=\\\"let bot of Game.Bots\\\" class=\\\"col-lg-2 col-md-4 col-sm-4 col-xs-6 well\\\">\\r\\n        <h4><span class=\\\"label label-default\\\">Bot</span></h4>\\r\\n        <p>Name: {{bot.Name}}</p>\\r\\n        <app-player-output [Score]=\\\"bot.Score\\\" [RoundScore]=\\\"bot.RoundScore\\\" [Bet]=\\\"bot.Bet\\\" [Cards]=\\\"bot.Cards\\\" [GameStage]=\\\"Game.Stage\\\"></app-player-output>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { HttpService } from '../../shared/services/http.service';\r\nimport { ErrorService } from '../../shared/services/error.service';\r\nimport { deserialize } from 'json-typescript-mapper';\r\nimport { forEach } from '@angular/router/src/utils/collection';\r\nimport { GameView } from '../../shared/models/game-view';\r\nimport { PlayerView } from '../../shared/models/player-view';\r\n\r\n@Component({\r\n    selector: 'app-game',\r\n    templateUrl: './game.component.html',\r\n    styleUrls: ['./game.component.css']\r\n})\r\nexport class GameComponent implements OnInit {\r\n    GameId: number;\r\n    Game: GameView = new GameView();\r\n\r\n    BetValidationMessage: string;\r\n    BetValidationError: boolean = false;\r\n    Bet: number = 50;\r\n    RoundResult: string;\r\n    GameResult: string;\r\n\r\n    BetInput: boolean = false;\r\n    TakeCard: boolean = false;\r\n    BlackJackDangerChoice: boolean = false;\r\n    EndRound: boolean = false;\r\n    EndGame: boolean = false;\r\n\r\n    constructor(\r\n        private _route: ActivatedRoute,\r\n        private _router: Router,\r\n        private _httpService: HttpService,\r\n        private _errorService: ErrorService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this._route.params.subscribe(params => {\r\n            this.GameId = params['Id'];\r\n            this.GetGame();\r\n        });\r\n    }\r\n\r\n    GamePlayInitializer() {\r\n        if (this.Game.Stage == 0) {\r\n            this.GamePlayBetInput();\r\n        }\r\n\r\n        if (this.Game.Stage == 1) {\r\n            this.ResumeGameAfterRoundFirstPhase();\r\n        }\r\n\r\n        if (this.Game.Stage == 2) {\r\n            this.ResumeGameAfterRoundSecondPhase();\r\n        }\r\n    }\r\n\r\n    GetGame() {\r\n        this._httpService.GetGame(this.GameId)\r\n            .subscribe(\r\n                (data) => {\r\n                    this.Game = deserialize(GameView, data);\r\n\r\n                    if (data[\"IsGameOver\"] != \"\") {\r\n                        this.GameResult = data[\"IsGameOver\"];\r\n                        this.GamePlayEndGame();\r\n                    }\r\n\r\n                    this.GamePlayInitializer();\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    this._errorService.SetError(error[\"error\"][\"Message\"]);\r\n                    this._router.navigate(['/error']);\r\n                }\r\n            );\r\n    }\r\n\r\n    ResumeGameAfterRoundFirstPhase() {\r\n        this._httpService.ResumeGameAfterRoundFirstPhase(this.Game.Id)\r\n            .subscribe(\r\n                (data) => {\r\n                    this.Game = deserialize(GameView, data);\r\n                    this.FirstPhaseGamePlay(data[\"HumanBlackJackAndDealerBlackJackDanger\"], data[\"CanHumanTakeOneMoreCard\"]);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    this._errorService.SetError(error[\"error\"][\"Message\"]);\r\n                    this._router.navigate(['/error']);\r\n                }\r\n            );\r\n    }\r\n\r\n    ResumeGameAfterRoundSecondPhase() {\r\n        this._httpService.ResumeGameAfterRoundSecondPhase(this.Game.Id)\r\n            .subscribe(\r\n                (data) => {\r\n                    this.Game = deserialize(GameView, data);\r\n                    this.RoundResult = data[\"RoundResult\"];\r\n                    this.GamePlayEndRound();\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    this._errorService.SetError(error[\"error\"][\"Message\"]);\r\n                    this._router.navigate(['/error']);\r\n                }\r\n            );\r\n    }\r\n\r\n    AddCardToHuman(takeCard: boolean) {\r\n        if (takeCard) {\r\n            this._httpService.AddOneMoreCardToHuman(this.Game.Id)\r\n                .subscribe(\r\n                (data) => {\r\n                    if (data[\"CanHumanTakeOneMoreCard\"]) {\r\n                        this.Game.Human = deserialize(PlayerView, data);\r\n                    }\r\n\r\n                    if (!data[\"CanHumanTakeOneMoreCard\"]) {\r\n                        this.DoRoundSecondPhase(false);\r\n                    }\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    this._errorService.SetError(error[\"error\"][\"Message\"]);\r\n                    this._router.navigate(['/error']);\r\n                }\r\n                );\r\n        }\r\n\r\n        if (!takeCard) {\r\n            this.DoRoundSecondPhase(false);\r\n        }\r\n    }\r\n\r\n    FirstPhaseGamePlay(humanBlackJackAndDealerBlackJackDanger: boolean, canHumanTakeOneMoreCard: boolean) {\r\n        this.Game.Stage = 1;\r\n        this.BetValidationError = false;\r\n        if (humanBlackJackAndDealerBlackJackDanger) {\r\n            this.GamePlayBlackJackDangerChoice();\r\n        }\r\n        if (canHumanTakeOneMoreCard) {\r\n            this.GamePlayTakeCard();\r\n        }\r\n        if (!humanBlackJackAndDealerBlackJackDanger && !canHumanTakeOneMoreCard) {\r\n            this.DoRoundSecondPhase(false);\r\n        }\r\n    }\r\n\r\n    DoRoundFirstPhase() {\r\n        this._httpService.DoRoundFirstPhase(this.Game.Id, this.Game.Human.GamePlayerId, this.Bet)\r\n            .subscribe(\r\n            (data) => {\r\n                this.Game = deserialize(GameView, data[\"Data\"]);\r\n\r\n                if (data[\"Message\"] != \"\") {\r\n                    this.ShowValidationMessage(data[\"Message\"]);\r\n                }\r\n                if (data[\"Message\"] == \"\") {\r\n                    this.FirstPhaseGamePlay(data[\"Data\"][\"HumanBlackJackAndDealerBlackJackDanger\"], data[\"Data\"][\"CanHumanTakeOneMoreCard\"]);\r\n                }\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                this._errorService.SetError(error[\"error\"][\"Message\"]);\r\n                this._router.navigate(['/error']);\r\n            }\r\n            );\r\n    }\r\n\r\n    ShowValidationMessage(validationMessage: string) {\r\n        this.BetValidationError = true;\r\n        this.BetValidationMessage = validationMessage;\r\n    }\r\n\r\n    DoRoundSecondPhase(humanBlackJackContinueRound: boolean) {\r\n        this._httpService.DoRoundSecondPhase(this.Game.Id, humanBlackJackContinueRound)\r\n            .subscribe(\r\n                (data) => {\r\n                    this.Game = deserialize(GameView, data);\r\n                    this.RoundResult = data[\"RoundResult\"];\r\n                    this.GamePlayEndRound();\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    this._errorService.SetError(error[\"error\"][\"Message\"]);\r\n                    this._router.navigate(['/error']);\r\n                }\r\n            );\r\n    }\r\n\r\n    StartNewGame() {\r\n        this._httpService.EndGame(this.Game.Id, this.GameResult)\r\n            .subscribe(\r\n                (data) => {\r\n                    this._router.navigate(['/user/' + this.Game.Human.Name]);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    this._errorService.SetError(error[\"error\"][\"Message\"]);\r\n                    this._router.navigate(['/error']);\r\n                }\r\n            );\r\n    }\r\n\r\n    StartNewRound() {\r\n        this._httpService.EndRound(this.Game.Id)\r\n            .subscribe(\r\n                (data) => {\r\n                    this.GetGame();\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    this._errorService.SetError(error[\"error\"][\"Message\"]);\r\n                    this._router.navigate(['/error']);\r\n                }\r\n            );\r\n    }\r\n\r\n    GamePlayBetInput() {\r\n        this.BetInput = true;\r\n        this.TakeCard = false;\r\n        this.BlackJackDangerChoice = false;\r\n        this.EndRound = false;\r\n        this.EndGame = false;\r\n    }\r\n\r\n    GamePlayTakeCard() {\r\n        this.BetInput = false;\r\n        this.TakeCard = true;\r\n        this.BlackJackDangerChoice = false;\r\n        this.EndRound = false;\r\n        this.EndGame = false;\r\n    }\r\n\r\n    GamePlayBlackJackDangerChoice() {\r\n        this.BetInput = false;\r\n        this.TakeCard = false;\r\n        this.BlackJackDangerChoice = true;\r\n        this.EndRound = false;\r\n        this.EndGame = false;\r\n    }\r\n\r\n    GamePlayEndRound() {\r\n        this.Game.Stage = 2;\r\n        this.BetInput = false;\r\n        this.TakeCard = false;\r\n        this.BlackJackDangerChoice = false;\r\n        this.EndRound = true;\r\n        this.EndGame = false;\r\n    }\r\n\r\n    GamePlayEndGame() {\r\n        this.BetInput = false;\r\n        this.TakeCard = false;\r\n        this.BlackJackDangerChoice = false;\r\n        this.EndRound = false;\r\n        this.EndGame = true;\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>Score: {{Score}}</p>\\r\\n\\r\\n<div *ngIf=\\\"!RoundStart\\\">\\r\\n    <p>Bet: {{Bet}}</p>\\r\\n    <p>CardScore: {{RoundScore}}</p>\\r\\n    <p>Cards:</p>\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let card of Cards\\\">{{card}}</li>\\r\\n    </ul>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-player-output',\r\n  templateUrl: './player-output.component.html',\r\n  styleUrls: ['./player-output.component.css']\r\n})\r\nexport class PlayerOutputComponent {\r\n    @Input() Score: number;\r\n    @Input() RoundScore: number;\r\n    @Input() Bet: number;\r\n    @Input() Cards: string[];\r\n\r\n    RoundStart: boolean = true;\r\n\r\n    constructor() { }\r\n\r\n    @Input()\r\n    set GameStage (stage: number) {\r\n        this.RoundStart = (stage == 0);\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2>Main page</h2>\\r\\n<hr />\\r\\n\\r\\n<div class=\\\"row row-flex\\\">\\r\\n    <div *ngIf=\\\"Player.ResumeGame\\\" class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-12 well\\\">\\r\\n        <h3>Game resuming</h3>\\r\\n        <p>You can resume your last game</p>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <a class=\\\"btn btn-primary\\\" (click)=\\\"ResumeGame()\\\">Resume game</a>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-12 well\\\">\\r\\n        <h3>Start new game</h3>\\r\\n        <label class=\\\"control-label col-md-4\\\">Amount of bots:</label>\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n            <input name=\\\"amountOfBots\\\" [(ngModel)]=\\\"AmountOfBots\\\" class=\\\"form-control\\\"\\r\\n                   type=\\\"number\\\" value=\\\"0\\\" min=\\\"0\\\" max=\\\"5\\\"\\r\\n                   #amountOfBots=\\\"ngModel\\\" pattern=\\\"[0-5]\\\" />\\r\\n            <div [hidden]=\\\"amountOfBots.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                Amount of bots must be more than or equals to 0 and less than or equals to 5.\\r\\n            </div>\\r\\n            <br />\\r\\n            <button [disabled]=\\\"amountOfBots.invalid\\\" class=\\\"btn btn-primary\\\" (click)=\\\"StartNewGame()\\\">Start new game</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\nimport { DataService } from '../../shared/services/data.service';\r\nimport { HttpService } from '../../shared/services/http.service';\r\nimport { ErrorService } from '../../shared/services/error.service';\r\nimport { AuthorizedUserView } from '../../shared/models/authorized-user-view';\r\n\r\n@Component({\r\n  selector: 'app-startpage',\r\n  templateUrl: './startpage.component.html',\r\n  styleUrls: ['./startpage.component.css']\r\n})\r\nexport class StartpageComponent implements OnInit {\r\n    UserName: string;\r\n    Player: AuthorizedUserView = new AuthorizedUserView();\r\n    AmountOfBots: number = 0;\r\n    GameId: number;\r\n\r\n    constructor (\r\n        private _dataService: DataService,\r\n        private _httpService: HttpService,\r\n        private _errorService: ErrorService,\r\n        private _router: Router,\r\n        private _route: ActivatedRoute\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.UserName = this._dataService.GetUserName();\r\n        this.AuthUser(this.UserName);\r\n    }\r\n\r\n    AuthUser(userName: string) {\r\n        this._httpService.GetAuthorizedPlayer(this.UserName)\r\n            .subscribe(\r\n            (data: AuthorizedUserView) => {\r\n                this.Player.Name = data.Name;\r\n                this.Player.PlayerId = data.PlayerId;\r\n                this.Player.ResumeGame = data.ResumeGame;\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                this._errorService.SetError(error[\"error\"][\"Message\"]);\r\n                this._router.navigate(['/error']);\r\n            }\r\n        );\r\n    }\r\n\r\n    StartNewGame() {\r\n        this._httpService.CreateNewGame(this.Player.PlayerId, this.AmountOfBots)\r\n            .subscribe(\r\n            (data) => {\r\n                this.GameId = data[\"GameId\"];\r\n                this._router.navigate(['/user/' + this.UserName + '/game/' + this.GameId]);\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n                this._errorService.SetError(error[\"error\"][\"Message\"]);\r\n                this._router.navigate(['/error']);\r\n            }\r\n        );\r\n    }\r\n\r\n    ResumeGame() {\r\n        this._httpService.ResumeGame(this.Player.PlayerId)\r\n            .subscribe(\r\n                (data) => {\r\n                    this.GameId = data[\"GameId\"];\r\n                    this._router.navigate(['/user/' + this.UserName + '/game/' + this.GameId]);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                    this._errorService.SetError(error[\"error\"][\"Message\"]);\r\n                    this._router.navigate(['/error']);\r\n                }\r\n            );\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1>Error</h1>\\r\\n<p>\\r\\n  {{Error}}\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ErrorService } from '../shared/services/error.service';\r\n\r\n@Component({\r\n  selector: 'app-error-page',\r\n  templateUrl: './error-page.component.html',\r\n  styleUrls: ['./error-page.component.css']\r\n})\r\nexport class ErrorPageComponent implements OnInit {\r\n    Error: string;\r\n\r\n    constructor(\r\n        private _errorService: ErrorService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.Error = this._errorService.GetError();\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron\\\">\\r\\n    <h1>BlackJack</h1>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>User name: </label>\\r\\n        <input class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"UserName\\\" #name=\\\"ngModel\\\" required />\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button [disabled]=\\\"name.invalid\\\" class=\\\"btn btn-primary\\\" (click)=\\\"AuthUser()\\\">Enter</button>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-homepage',\r\n    templateUrl: './homepage.component.html',\r\n    styleUrls: ['./homepage.component.css']\r\n})\r\nexport class HomepageComponent {\r\n    UserName: string;\r\n\r\n    constructor(\r\n        private _router: Router\r\n    ) { }\r\n\r\n    AuthUser() {\r\n        this._router.navigate(['/user', this.UserName]);\r\n    }\r\n}\r\n","﻿export class AuthorizedUserView {\r\n    Name: string;\r\n    PlayerId: number;\r\n    ResumeGame: boolean;\r\n}","﻿import { PlayerView } from '../models/player-view';\r\nimport { JsonProperty } from 'json-typescript-mapper';\r\n\r\nexport class GameView {\r\n    @JsonProperty('Id')\r\n    Id: number;\r\n\r\n    @JsonProperty('Stage')\r\n    Stage: number;\r\n\r\n    @JsonProperty({ clazz: PlayerView, name: 'Human' })\r\n    Human: PlayerView;\r\n\r\n    @JsonProperty({ clazz: PlayerView, name: 'Dealer' })\r\n    Dealer: PlayerView;\r\n\r\n    @JsonProperty({ clazz: PlayerView, name: 'Bots' })\r\n    Bots: PlayerView[];\r\n\r\n    constructor() {\r\n        this.Id = void 0;\r\n        this.Stage = void 0;\r\n        this.Human = void 0;\r\n        this.Dealer = void 0;\r\n        this.Bots = void 0;\r\n    }\r\n}","﻿import { JsonProperty } from 'json-typescript-mapper';\r\n\r\nexport class PlayerView {\r\n    @JsonProperty('Id')\r\n    GamePlayerId: number;\r\n\r\n    @JsonProperty('Name')\r\n    Name: string;\r\n\r\n    @JsonProperty('Score')\r\n    Score: number;\r\n\r\n    @JsonProperty('Bet')\r\n    Bet: number;\r\n\r\n    @JsonProperty('RoundScore')\r\n    RoundScore: number;\r\n\r\n    @JsonProperty('Cards')\r\n    Cards: string[];\r\n\r\n    constructor() {\r\n        this.GamePlayerId = void 0;\r\n        this.Name = void 0;\r\n        this.Score = void 0;\r\n        this.Bet = void 0;\r\n        this.RoundScore = void 0;\r\n        this.Cards = void 0;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n    UserName: string;\r\n    \r\n    SetUserName(userName: string) {\r\n        this.UserName = userName;\r\n    }\r\n\r\n    GetUserName() {\r\n        return this.UserName;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n    Error: string;\r\n\r\n    SetError(error: string) {\r\n        this.Error = error;\r\n    }\r\n\r\n    GetError() {\r\n        return this.Error;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService {\r\n    constructor(private http: HttpClient) { }\r\n    \r\n    GetAuthorizedPlayer(userName: string) {\r\n        const options = userName ?\r\n            { params: new HttpParams().set('userName', userName.toString()) } : {};\r\n\r\n        return this.http.get('StartGame/AuthorizePlayer', options);\r\n    }\r\n\r\n    CreateNewGame(playerId: number, amountOfBots: number) {\r\n        const body = { PlayerId: playerId, AmountOfBots: amountOfBots };\r\n        return this.http.post('StartGame/CreateNewGame', body);\r\n    }\r\n\r\n    ResumeGame(playerId: number) {\r\n        const options = playerId ?\r\n            { params: new HttpParams().set('playerId', playerId.toString()) } : {};\r\n\r\n        return this.http.get('StartGame/ResumeGame', options);\r\n    }\r\n\r\n    GetGame(gameId: number) {\r\n        const options = gameId ?\r\n            { params: new HttpParams().set('gameId', gameId.toString()) } : {};\r\n\r\n        return this.http.get('StartGame/StartRound', options);\r\n    }\r\n\r\n    DoRoundFirstPhase(gameId: number, humanGamePlayerId: number, bet: number) {\r\n        const body = { GameId: gameId, Bet: bet, GamePlayerId: humanGamePlayerId };\r\n        return this.http.post('GameLogic/DoRoundFirstPhase', body);\r\n    }\r\n\r\n    DoRoundSecondPhase(gameId: number, humanBlackJackContinueRound: boolean) {\r\n        const body = { GameId: gameId, HumanBlackJackAndDealerBlackJackDanger: humanBlackJackContinueRound };\r\n        return this.http.post('GameLogic/DoRoundSecondPhase', body);\r\n    }\r\n\r\n    AddOneMoreCardToHuman(gameId: number) {\r\n        const options = gameId ?\r\n            { params: new HttpParams().set('gameId', gameId.toString()) } : {};\r\n\r\n        return this.http.get('GameLogic/AddOneMoreCardToHuman', options);\r\n    }\r\n\r\n    ResumeGameAfterRoundFirstPhase(gameId: number) {\r\n        const options = gameId ?\r\n            { params: new HttpParams().set('gameId', gameId.toString()) } : {};\r\n\r\n        return this.http.get('GameLogic/ResumeGameAfterRoundFirstPhase', options);\r\n    }\r\n\r\n    ResumeGameAfterRoundSecondPhase(gameId: number) {\r\n        const options = gameId ?\r\n            { params: new HttpParams().set('gameId', gameId.toString()) } : {};\r\n\r\n        return this.http.get('GameLogic/ResumeGameAfterRoundSecondPhase', options);\r\n    }\r\n\r\n    EndRound(gameId: number) {\r\n        const options = gameId ?\r\n            { params: new HttpParams().set('gameId', gameId.toString()) } : {};\r\n\r\n        return this.http.get('GameLogic/EndRound', options);\r\n    }\r\n\r\n    EndGame(gameId: number, gameResult: string) {\r\n        const body = { GameId: gameId, GameResult: gameResult };\r\n        return this.http.post('GameLogic/EndGame', body);\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}