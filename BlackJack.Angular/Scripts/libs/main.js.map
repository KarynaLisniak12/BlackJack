{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth-user/auth-user.component.css","webpack:///./src/app/auth-user/auth-user.component.html","webpack:///./src/app/auth-user/auth-user.component.ts","webpack:///./src/app/bet-input/bet-input.component.css","webpack:///./src/app/bet-input/bet-input.component.html","webpack:///./src/app/bet-input/bet-input.component.ts","webpack:///./src/app/bj-danger-choice/bj-danger-choice.component.css","webpack:///./src/app/bj-danger-choice/bj-danger-choice.component.html","webpack:///./src/app/bj-danger-choice/bj-danger-choice.component.ts","webpack:///./src/app/dealer-output/dealer-output.component.css","webpack:///./src/app/dealer-output/dealer-output.component.html","webpack:///./src/app/dealer-output/dealer-output.component.ts","webpack:///./src/app/end-round/end-round.component.css","webpack:///./src/app/end-round/end-round.component.html","webpack:///./src/app/end-round/end-round.component.ts","webpack:///./src/app/game/game.component.css","webpack:///./src/app/game/game.component.html","webpack:///./src/app/game/game.component.ts","webpack:///./src/app/homepage/homepage.component.css","webpack:///./src/app/homepage/homepage.component.html","webpack:///./src/app/homepage/homepage.component.ts","webpack:///./src/app/player-output/player-output.component.css","webpack:///./src/app/player-output/player-output.component.html","webpack:///./src/app/player-output/player-output.component.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/startpage/startpage.component.css","webpack:///./src/app/startpage/startpage.component.html","webpack:///./src/app/startpage/startpage.component.ts","webpack:///./src/app/take-card/take-card.component.css","webpack:///./src/app/take-card/take-card.component.html","webpack:///./src/app/take-card/take-card.component.ts","webpack:///./src/app/viewmodels/AuthPlayerViewModel.ts","webpack:///./src/app/viewmodels/GameViewModel.ts","webpack:///./src/app/viewmodels/MessageViewModel.ts","webpack:///./src/app/viewmodels/PlayerViewModel.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    \n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { APP_BASE_HREF } from '@angular/common';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\nimport { StartpageComponent } from './startpage/startpage.component';\r\nimport { AuthUserComponent } from './auth-user/auth-user.component';\r\nimport { DataService } from './services/data.service';\r\nimport { GameComponent } from './game/game.component';\r\nimport { PlayerOutputComponent } from './player-output/player-output.component';\r\nimport { DealerOutputComponent } from './dealer-output/dealer-output.component';\r\nimport { BetInputComponent } from './bet-input/bet-input.component';\r\nimport { TakeCardComponent } from './take-card/take-card.component';\r\nimport { BjDangerChoiceComponent } from './bj-danger-choice/bj-danger-choice.component';\r\nimport { EndRoundComponent } from './end-round/end-round.component';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', component: HomepageComponent },\r\n    {\r\n        path: 'user/:UserName',\r\n        component: AuthUserComponent,\r\n        children: [\r\n            { path: '', component: StartpageComponent },\r\n            { path: 'game/:Id', component: GameComponent }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n      AppComponent,\r\n      HomepageComponent,\r\n      StartpageComponent,\r\n      AuthUserComponent,\r\n      GameComponent,\r\n      PlayerOutputComponent,\r\n      DealerOutputComponent,\r\n      BetInputComponent,\r\n      TakeCardComponent,\r\n      BjDangerChoiceComponent,\r\n      EndRoundComponent\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      FormsModule,\r\n      HttpClientModule,\r\n      RouterModule.forRoot(\r\n          appRoutes,\r\n          { useHash: true }\r\n      )\r\n  ],\r\n    providers: [\r\n        DataService,\r\n        { provide: APP_BASE_HREF, useValue: '/' }\r\n    ],\r\n    bootstrap: [\r\n        AppComponent,\r\n        HomepageComponent,\r\n        StartpageComponent,\r\n        AuthUserComponent,\r\n        GameComponent,\r\n        PlayerOutputComponent\r\n    ]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-default\\\">\\r\\n    <div class=\\\"container\\\">\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myNavbar\\\">\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n            </button>\\r\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/user', UserName]\\\">\\r\\n                Home\\r\\n            </a>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"myNavbar\\\">\\r\\n            <ul class=\\\"nav navbar-nav\\\">\\r\\n                <li class=\\\"navbar-text\\\">\\r\\n                    <b>Log in as: {{UserName}}</b>\\r\\n                </li>\\r\\n                <li class=\\\"nav-item\\\">\\r\\n                    <a routerLink=\\\"/\\\">\\r\\n                        Log out\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</nav>\\r\\n<router-outlet></router-outlet>  \"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { DataService } from '../services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-auth-user',\r\n  templateUrl: './auth-user.component.html',\r\n  styleUrls: ['./auth-user.component.css']\r\n})\r\nexport class AuthUserComponent implements OnInit {\r\n    UserName: string;\r\n\r\n    constructor(\r\n        private dataService: DataService,\r\n        private route: ActivatedRoute\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(params => {\r\n            this.UserName = params['UserName']\r\n        });\r\n\r\n        this.dataService.SetUserName(this.UserName);\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<label class=\\\"control-label\\\">Enter your bet: </label>\\r\\n<input [(ngModel)]=\\\"Bet\\\" type=\\\"number\\\" \\r\\n       class=\\\"form-control\\\" step=\\\"50\\\" min=\\\"50\\\" value=\\\"50\\\" max={{Score}}  />\\r\\n<br />\\r\\n<div *ngIf=\\\"ValidationError\\\">\\r\\n    <div class=\\\"alert alert-danger\\\">{{ValidationMessage.Message}}</div>\\r\\n    <br />\\r\\n</div>\\r\\n<button class=\\\"btn btn-primary\\\" (click)=\\\"EnterBet()\\\">Enter</button>\\r\\n\"","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { DataService } from '../services/data.service';\r\nimport { MessageViewModel } from '../viewmodels/MessageViewModel';\r\nimport { deserialize } from 'json-typescript-mapper';\r\n\r\n@Component({\r\n  selector: 'app-bet-input',\r\n  templateUrl: './bet-input.component.html',\r\n  styleUrls: ['./bet-input.component.css']\r\n})\r\nexport class BetInputComponent {\r\n    @Input() Score: number;\r\n    @Input() GameId: number;\r\n    @Input() HumanGamePlayerId: number;\r\n    ValidationMessage: MessageViewModel;\r\n    ValidationError: boolean = false;\r\n    Bet: number = 50;\r\n\r\n    @Output() BetOut = new EventEmitter();\r\n    \r\n    constructor(\r\n        private dataService: DataService\r\n    ) { }\r\n\r\n    EnterBet() {\r\n        this.dataService.BetsCreation(this.GameId, this.HumanGamePlayerId, this.Bet)\r\n            .subscribe(\r\n                (data) => {\r\n                    this.ValidationMessage = deserialize(MessageViewModel, data);\r\n                    this.OnValidate();\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            );\r\n    }\r\n\r\n    OnValidate() {\r\n        if (this.ValidationMessage.Message != \"\") {\r\n            this.ValidationError = true;\r\n        }\r\n\r\n        if (this.ValidationMessage.Message == \"\") {\r\n            this.BetOut.emit();\r\n        }\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  bj-danger-choice works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-bj-danger-choice',\n  templateUrl: './bj-danger-choice.component.html',\n  styleUrls: ['./bj-danger-choice.component.css']\n})\nexport class BjDangerChoiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>Score: {{PlayerViewModel.Score}}</p>\\r\\n\\r\\n<div *ngIf=\\\"RoundFirstPhase\\\">\\r\\n    <p>Card:</p>\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let card of PlayerViewModel.Cards\\\">{{card}}</li>\\r\\n    </ul>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"RoundSecondPhase\\\">\\r\\n    <p>CardScore: {{PlayerViewModel.RoundScore}}</p>\\r\\n    <p>Cards:</p>\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let card of PlayerViewModel.Cards\\\">{{card}}</li>\\r\\n    </ul>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { Input } from '@angular/core';\r\nimport { deserialize } from 'json-typescript-mapper';\r\nimport { PlayerViewModel } from '../viewmodels/PlayerViewModel';\r\nimport { DataService } from '../services/data.service';\r\n\r\n@Component({\r\n    selector: 'app-dealer-output',\r\n    templateUrl: './dealer-output.component.html',\r\n    styleUrls: ['./dealer-output.component.css']\r\n})\r\nexport class DealerOutputComponent {\r\n    @Input() PlayerViewModel: PlayerViewModel;\r\n    \r\n    RoundFirstPhase: boolean = false;\r\n    RoundSecondPhase: boolean = false;\r\n\r\n    constructor(\r\n        private dataService: DataService\r\n    ) { }\r\n\r\n    @Input()\r\n    set GameStage(stage: number) {\r\n        if (stage == 1) {\r\n            this.RoundFirstPhase = true;\r\n            this.RoundSecondPhase = false;\r\n            this.dataService.GetDealerFirstPhase(this.PlayerViewModel.GamePlayerId)\r\n                .subscribe(\r\n                    (data) => {\r\n                        this.PlayerViewModel = deserialize(PlayerViewModel, data);\r\n                    },\r\n                    (error) => {\r\n                        console.log(error);\r\n                    }\r\n                );\r\n        }\r\n\r\n        if (stage == 2) {\r\n            this.RoundFirstPhase = false;\r\n            this.RoundSecondPhase = true;\r\n            this.dataService.GetDealerSecondPhase(this.PlayerViewModel.GamePlayerId)\r\n                .subscribe(\r\n                    (data) => {\r\n                        this.PlayerViewModel = deserialize(PlayerViewModel, data);\r\n                    },\r\n                    (error) => {\r\n                        console.log(error);\r\n                    }\r\n                );\r\n        }\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  end-round works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-end-round',\n  templateUrl: './end-round.component.html',\n  styleUrls: ['./end-round.component.css']\n})\nexport class EndRoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row row-flex\\\">\\r\\n    <div class=\\\"col-lg-4 col-md-4 col-sm-4 col-xs-12 well\\\">\\r\\n        <h4><span class=\\\"label label-danger\\\">Dealer</span></h4>\\r\\n        <p>Name: {{GameViewModel.Dealer.Name}}</p>\\r\\n        <app-dealer-output [PlayerViewModel]=\\\"GameViewModel.Dealer\\\" [GameStage]=\\\"GameViewModel.Stage\\\"></app-dealer-output>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-8 col-md-8 col-sm-8 col-xs-12 well\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-12\\\">\\r\\n                <h4><span class=\\\"label label-primary\\\">Human</span></h4>\\r\\n                <p>Name: {{GameViewModel.Human.Name}}</p>\\r\\n                <app-player-output [PlayerViewModel]=\\\"GameViewModel.Human\\\" [GameStage]=\\\"GameViewModel.Stage\\\"></app-player-output>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-12\\\">\\r\\n                <div *ngIf=\\\"BetInput\\\">\\r\\n                    <app-bet-input [Score]=\\\"GameViewModel.Human.Score\\\" [GameId]=\\\"GameId\\\" [HumanGamePlayerId]=\\\"GameViewModel.Human.GamePlayerId\\\" (BetOut)=\\\"OnBetsCreation()\\\"></app-bet-input>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"TakeCard\\\">\\r\\n                    <button class=\\\"btn btn-danger\\\" (click)=\\\"GamePlayBetInput()\\\">TakeCard</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row row-flex\\\">\\r\\n    <div *ngFor=\\\"let bot of GameViewModel.Bots\\\" class=\\\"col-lg-2 col-md-4 col-sm-4 col-xs-6 well\\\">\\r\\n        <h4><span class=\\\"label label-default\\\">Bot</span></h4>\\r\\n        <p>Name: {{bot.Name}}</p>\\r\\n        <app-player-output [PlayerViewModel]=\\\"bot\\\" [GameStage]=\\\"GameViewModel.Stage\\\"></app-player-output>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { deserialize } from 'json-typescript-mapper';\r\n\r\nimport { GameViewModel } from '../viewmodels/GameViewModel';\r\nimport { DataService } from '../services/data.service';\r\nimport { forEach } from '@angular/router/src/utils/collection';\r\n\r\n@Component({\r\n  selector: 'app-game',\r\n  templateUrl: './game.component.html',\r\n  styleUrls: ['./game.component.css']\r\n})\r\nexport class GameComponent implements OnInit {\r\n    GameId: number;\r\n    GameViewModel: GameViewModel;\r\n\r\n    BetInput: boolean = false;\r\n    TakeCard: boolean = false;\r\n    BjDangerChoice: boolean = false;\r\n    EndRound: boolean = false;\r\n    NewGame: boolean = false;\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private dataService: DataService\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.route.params.subscribe(params => {\r\n            this.GameId = params['Id'];\r\n            this.GetGame();\r\n        });\r\n    }\r\n\r\n    GamePlayInitializer() {\r\n        if (this.GameViewModel.Stage == 0) {\r\n            this.GamePlayBetInput();\r\n        }\r\n\r\n        if (this.GameViewModel.Stage == 1) {\r\n            this.GamePlayTakeCard();\r\n        }\r\n    }\r\n\r\n    GetGame() {\r\n        this.dataService.GetGame(this.GameId)\r\n            .subscribe(\r\n                (data) => {\r\n                    this.GameViewModel = deserialize(GameViewModel, data);\r\n                    this.GamePlayInitializer();\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            );\r\n    }\r\n\r\n    OnBetsCreation() {\r\n        this.dataService.RoundStart(this.GameId)\r\n            .subscribe(\r\n                (data) => {\r\n                    this.GetGame();\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            )\r\n    }\r\n\r\n    GamePlayBetInput() {\r\n        this.BetInput = true;\r\n        this.TakeCard = false;\r\n        this.BjDangerChoice = false;\r\n        this.EndRound = false;\r\n        this.NewGame = false;\r\n    }\r\n\r\n    GamePlayTakeCard() {\r\n        this.BetInput = false;\r\n        this.TakeCard = true;\r\n        this.BjDangerChoice = false;\r\n        this.EndRound = false;\r\n        this.NewGame = false;\r\n    }\r\n\r\n    GamePlayBjDangerChoice() {\r\n        this.BetInput = false;\r\n        this.TakeCard = false;\r\n        this.BjDangerChoice = true;\r\n        this.EndRound = false;\r\n        this.NewGame = false;\r\n    }\r\n\r\n    GamePlayEndRound() {\r\n        this.BetInput = false;\r\n        this.TakeCard = false;\r\n        this.BjDangerChoice = false;\r\n        this.EndRound = true;\r\n        this.NewGame = false;\r\n    }\r\n\r\n    GamePlayNewGame() {\r\n        this.BetInput = false;\r\n        this.TakeCard = false;\r\n        this.BjDangerChoice = false;\r\n        this.EndRound = false;\r\n        this.NewGame = true;\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron\\\">\\r\\n    <h1>BlackJack</h1>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <label>User name: </label>\\r\\n        <input class=\\\"form-control\\\" name=\\\"name\\\" [(ngModel)]=\\\"UserName\\\" #name=\\\"ngModel\\\" required />\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n        <button [disabled]=\\\"name.invalid\\\" class=\\\"btn btn-primary\\\" (click)=\\\"AuthUser()\\\">Enter</button>\\r\\n    </div>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-homepage',\r\n    templateUrl: './homepage.component.html',\r\n    styleUrls: ['./homepage.component.css']\r\n})\r\nexport class HomepageComponent {\r\n    UserName: string;\r\n\r\n    constructor(\r\n        private router: Router\r\n    ) { }\r\n\r\n    AuthUser() {\r\n        this.router.navigate(['/user', this.UserName]);\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>Score: {{PlayerViewModel.Score}}</p>\\r\\n\\r\\n<div *ngIf=\\\"!RoundStart\\\">\\r\\n    <p>Bet: {{PlayerViewModel.Bet}}</p>\\r\\n    <p>CardScore: {{PlayerViewModel.RoundScore}}</p>\\r\\n    <p>Cards:</p>\\r\\n    <ul>\\r\\n        <li *ngFor=\\\"let card of PlayerViewModel.Cards\\\">{{card}}</li>\\r\\n    </ul>\\r\\n</div>\"","import { Component } from '@angular/core';\r\nimport { Input } from '@angular/core';\r\nimport { deserialize } from 'json-typescript-mapper';\r\nimport { PlayerViewModel } from '../viewmodels/PlayerViewModel';\r\nimport { DataService } from '../services/data.service';\r\n\r\n@Component({\r\n  selector: 'app-player-output',\r\n  templateUrl: './player-output.component.html',\r\n  styleUrls: ['./player-output.component.css']\r\n})\r\nexport class PlayerOutputComponent {\r\n    @Input() PlayerViewModel: PlayerViewModel;\r\n\r\n    RoundStart: boolean = true;\r\n\r\n    constructor(\r\n        private dataService: DataService\r\n    ) { }\r\n\r\n    @Input()\r\n    set GameStage (stage: number) {\r\n        if (stage != 0) {\r\n            this.RoundStart = false;\r\n            this.dataService.GetGamePlayer(this.PlayerViewModel.GamePlayerId)\r\n                .subscribe(\r\n                (data) => {\r\n                    this.PlayerViewModel = deserialize(PlayerViewModel, data);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            );\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { GameViewModel } from '../viewmodels/GameViewModel';\r\nimport { PlayerViewModel } from '../viewmodels/PlayerViewModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n    UserName: string;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    SetUserName(userName: string) {\r\n        this.UserName = userName;\r\n    }\r\n\r\n    GetUserName() {\r\n        return this.UserName;\r\n    }\r\n\r\n    GetAuthorizedPlayer() {\r\n        const body = { UserName: this.UserName };\r\n        return this.http.post('http://localhost:55953/StartGame/GetAuthorizedPlayer', body);\r\n    }\r\n\r\n    CreateNewGame(playerId: number, amountOfBots: number) {\r\n        const body = { PlayerId: playerId, AmountOfBots: amountOfBots };\r\n        return this.http.post('http://localhost:55953/StartGame/CreateNewGame', body);\r\n    }\r\n\r\n    ResumeGame(playerId: number) {\r\n        return this.http.get('http://localhost:55953/StartGame/ResumeGame?playerId=' + playerId);\r\n    }\r\n\r\n    GetGame(gameId: number) {\r\n        return this.http.get('http://localhost:55953/StartGame/GetGame?gameId=' + gameId);\r\n    }\r\n\r\n    GetGamePlayer(gamePlayerId: number) {\r\n        return this.http.get('http://localhost:55953/PlayerLogic/GetPlayer?gamePlayerId=' + gamePlayerId);\r\n    }\r\n\r\n    GetDealerFirstPhase(gamePlayerId: number) {\r\n        return this.http.get('http://localhost:55953/PlayerLogic/GetDealerInFirstPhase?gamePlayerId=' + gamePlayerId);\r\n    }\r\n\r\n    GetDealerSecondPhase(gamePlayerId: number) {\r\n        return this.http.get('http://localhost:55953/PlayerLogic/GetDealerInSecondPhase?gamePlayerId=' + gamePlayerId);\r\n    }\r\n\r\n    BetsCreation(gameId: number, humanGamePlayerId: number, bet: number) {\r\n        const body = { InGameId: gameId, Bet: bet, HumanGamePlayerId: humanGamePlayerId };\r\n        return this.http.post('http://localhost:55953/PlayerLogic/BetsCreation', body);\r\n    }\r\n\r\n    RoundStart(gameId: number) {\r\n        return this.http.get('http://localhost:55953/GameLogic/RoundStart?inGameId=' + gameId);\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<h2>Main page</h2>\\r\\n<hr />\\r\\n\\r\\n<div class=\\\"row row-flex\\\">\\r\\n    <div *ngIf=\\\"Player.ResumeGame\\\" class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-12 well\\\">\\r\\n        <h3>Game resuming</h3>\\r\\n        <p>You can resume your last game</p>\\r\\n        <div class=\\\"form-group\\\">\\r\\n            <a class=\\\"btn btn-primary\\\" (click)=\\\"ResumeGame()\\\">Resume game</a>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-xs-12 well\\\">\\r\\n        <h3>Start new game</h3>\\r\\n        <label class=\\\"control-label col-md-4\\\">Amount of bots:</label>\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n            <input name=\\\"amountOfBots\\\" [(ngModel)]=\\\"AmountOfBots\\\" class=\\\"form-control\\\"\\r\\n                   type=\\\"number\\\" value=\\\"0\\\" min=\\\"0\\\" max=\\\"5\\\"\\r\\n                   #amountOfBots=\\\"ngModel\\\" pattern=\\\"[0-5]\\\" />\\r\\n            <div [hidden]=\\\"amountOfBots.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                Amount of bots must be more than or equals to 0 and less than or equals to 5.\\r\\n            </div>\\r\\n            <br />\\r\\n            <button [disabled]=\\\"amountOfBots.invalid\\\" class=\\\"btn btn-primary\\\" (click)=\\\"StartNewGame()\\\">Start new game</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { DataService } from '../services/data.service';\r\nimport { AuthPlayerViewModel } from '../viewmodels/AuthPlayerViewModel';\r\nimport { GameIdViewModel } from '../viewmodels/GameIdViewModel';\r\n\r\n@Component({\r\n  selector: 'app-startpage',\r\n  templateUrl: './startpage.component.html',\r\n  styleUrls: ['./startpage.component.css']\r\n})\r\nexport class StartpageComponent implements OnInit {\r\n    UserName: string;\r\n    Player: AuthPlayerViewModel = new AuthPlayerViewModel();\r\n    AmountOfBots: number = 0;\r\n    GameId: number;\r\n\r\n    constructor (\r\n        private dataService: DataService,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n        this.UserName = this.dataService.GetUserName();\r\n        this.AuthUser(this.UserName);\r\n    }\r\n\r\n    AuthUser(userName: string) {\r\n        this.dataService.GetAuthorizedPlayer()\r\n            .subscribe(\r\n            (data: AuthPlayerViewModel) => {\r\n                this.Player.Name = data.Name;\r\n                this.Player.PlayerId = data.PlayerId;\r\n                this.Player.ResumeGame = data.ResumeGame;\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    StartNewGame() {\r\n        this.dataService.CreateNewGame(this.Player.PlayerId, this.AmountOfBots)\r\n            .subscribe(\r\n            (data: GameIdViewModel) => {\r\n                this.GameId = data.GameId;\r\n                this.router.navigate(['/user/' + this.UserName + '/game/' + this.GameId]);\r\n            },\r\n            (error) => {\r\n                console.log(error);\r\n            }\r\n        );\r\n    }\r\n\r\n    ResumeGame() {\r\n        this.dataService.ResumeGame(this.Player.PlayerId)\r\n            .subscribe(\r\n                (data: GameIdViewModel) => {\r\n                    this.GameId = data.GameId;\r\n                    this.router.navigate(['/user/' + this.UserName + '/game/' + this.GameId]);\r\n                },\r\n                (error) => {\r\n                    console.log(error);\r\n                }\r\n            );\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<p>\\n  take-card works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-take-card',\n  templateUrl: './take-card.component.html',\n  styleUrls: ['./take-card.component.css']\n})\nexport class TakeCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","﻿export class AuthPlayerViewModel {\r\n    Name: string;\r\n    PlayerId: number;\r\n    ResumeGame: boolean;\r\n}","﻿import { PlayerViewModel } from '../viewmodels/PlayerViewModel';\r\nimport { JsonProperty } from 'json-typescript-mapper';\r\n\r\nexport class GameViewModel {\r\n    @JsonProperty('Id')\r\n    GameId: number;\r\n\r\n    @JsonProperty('Stage')\r\n    Stage: number;\r\n\r\n    @JsonProperty({ clazz: PlayerViewModel, name: 'Human' })\r\n    Human: PlayerViewModel;\r\n\r\n    @JsonProperty({ clazz: PlayerViewModel, name: 'Dealer' })\r\n    Dealer: PlayerViewModel;\r\n\r\n    @JsonProperty({ clazz: PlayerViewModel, name: 'Bots' })\r\n    Bots: PlayerViewModel[];\r\n\r\n    constructor() {\r\n        this.GameId = void 0;\r\n        this.Stage = void 0;\r\n        this.Human = void 0;\r\n        this.Dealer = void 0;\r\n        this.Bots = void 0;\r\n    }\r\n}","﻿import { JsonProperty } from 'json-typescript-mapper';\r\n\r\nexport class MessageViewModel {\r\n    @JsonProperty('Message')\r\n    Message: string;\r\n\r\n    constructor() {\r\n        this.Message = void 0;\r\n    }\r\n}","﻿import { JsonProperty } from 'json-typescript-mapper';\r\n\r\nexport class PlayerViewModel {\r\n    @JsonProperty('Id')\r\n    GamePlayerId: number;\r\n\r\n    @JsonProperty('Name')\r\n    Name: string;\r\n\r\n    @JsonProperty('Score')\r\n    Score: number;\r\n\r\n    @JsonProperty('Bet')\r\n    Bet: number;\r\n\r\n    @JsonProperty('RoundScore')\r\n    RoundScore: number;\r\n\r\n    @JsonProperty('Cards')\r\n    Cards: string[];\r\n\r\n    constructor() {\r\n        this.GamePlayerId = void 0;\r\n        this.Name = void 0;\r\n        this.Score = void 0;\r\n        this.Bet = void 0;\r\n        this.RoundScore = void 0;\r\n        this.Cards = void 0;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}